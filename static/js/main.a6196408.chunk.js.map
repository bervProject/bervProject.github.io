{"version":3,"sources":["authConfig.ts","components/SingInButton.tsx","components/SignOutButton.tsx","color-mode-context.ts","components/Header.tsx","Home.tsx","Maintainer.tsx","About.tsx","Privacy.tsx","Routes.tsx","Navigation.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["loginRequest","scopes","SignInButton","instance","useMsal","Button","variant","color","onClick","loginRedirect","catch","e","console","error","handleLogin","SignOutButton","logoutRedirect","handleLogout","ColorModeContext","React","createContext","toggleColorMode","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","Header","useTheme","classes","isAuthenticated","useIsAuthenticated","colorMode","useContext","mobileMoreAnchorEl","setMobileMoreAnchorEl","useState","isMobileMenuOpen","Boolean","mobileMenuId","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","IconButton","size","palette","mode","Box","sx","AppBar","position","Toolbar","edge","className","Icon","Typography","noWrap","display","xs","md","ml","event","currentTarget","padding","height","width","columns","field","headerName","sortable","renderCell","params","startIcon","href","value","Home","projects","setProjects","useEffect","axios","get","then","response","data","err","log","rows","loading","length","pageSize","rowsPerPageOptions","disableSelectionOnClick","large","Maintainer","Grid","container","item","Card","CardHeader","avatar","Avatar","email","subheader","CardContent","About","Privacy","Routes","path","key","icon","sidebarName","component","withRouter","props","setValue","BottomNavigation","defaultValue","result","filter","route","location","pathname","map","activeRoute","onChange","newValue","prop","BottomNavigationAction","label","Link","to","App","setMode","useMemo","prevMode","createTheme","Provider","ThemeProvider","CssBaseline","exact","from","window","hostname","match","msalInstance","PublicClientApplication","auth","clientId","authority","redirectUri","cache","storeAuthStateInCookie","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yOAEO,MAYMA,EAAe,CAC1BC,OAAQ,CAAC,c,oMCAJ,MAAMC,EAAe,KAC1B,MAAM,SAAEC,GAAaC,cAErB,OACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYC,QAAS,IAb3D,SAAqBL,GACnBA,EAASM,cAAcT,GAAcU,OAAMC,IACzCC,QAAQC,MAAMF,MAW+CG,CAAYX,GAAzE,sBCLG,MAAMY,EAAgB,KAC3B,MAAM,SAAEZ,GAAaC,cAErB,OACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYC,QAAS,IAb3D,SAAsBL,GACpBA,EAASa,iBAAiBN,OAAMC,IAC9BC,QAAQC,MAAMF,MAW+CM,CAAad,GAA1E,uBChBSe,EAAmBC,IAAMC,cAAc,CAAEC,gBAAiB,SCkBjEC,EAAYC,aAAYC,GAC5BC,YAAa,CACXC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaL,EAAMM,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAKD,SAASK,IACtB,MAAMR,EAAQS,cACRC,EAAUZ,IACVa,EAAkBC,cAClBC,EAAYC,qBAAWpB,IACtBqB,EAAoBC,GACzBC,mBAA6B,MAEzBC,EAAmBC,QAAQJ,GAU3BK,EAAe,qCACfC,EACJ,eAACC,EAAA,EAAD,CACEC,SAAUR,EACVS,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,GAAIP,EACJQ,aAAW,EACXC,gBAAiB,CACfJ,SAAU,MACVC,WAAY,SAEdI,KAAMZ,EACNa,QAnB0B,KAC5Bf,EAAsB,OAKtB,UAeE,eAACgB,EAAA,EAAD,CAAUhD,QAAS6B,EAAUhB,gBAA7B,UACE,cAACoC,EAAA,EAAD,CAAYC,KAAK,QAAQ,aAAW,mBAAmBnD,MAAM,UAA7D,SAC0B,SAAvBiB,EAAMmC,QAAQC,KAAkB,cAAC,IAAD,IAAsB,cAAC,IAAD,MAEzD,gDAEF,cAACJ,EAAA,EAAD,UACGrB,EAAkB,cAACpB,EAAD,IAAoB,cAACb,EAAD,SAK7C,OACE,eAAC2D,EAAA,EAAD,CAAKC,GAAI,CAAEnC,SAAU,GAArB,UACE,cAACoC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACR,EAAA,EAAD,CACES,KAAK,QACLC,UAAWjC,EAAQN,WACnBrB,MAAM,UACN,aAAW,cACXmD,KAAK,QALP,SAME,cAACU,EAAA,EAAD,qBAEF,cAACC,EAAA,EAAD,CAAYF,UAAWjC,EAAQH,MAAOzB,QAAQ,KAAKgE,QAAM,EAAzD,0BAGA,cAACT,EAAA,EAAD,CAAKC,GAAI,CAAES,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAtC,SACE,cAAChB,EAAA,EAAD,CAAYK,GAAI,CAAEY,GAAI,GAAKlE,QAAS6B,EAAUhB,gBAAiBd,MAAM,UAArE,SAC0B,SAAvBiB,EAAMmC,QAAQC,KAAkB,cAAC,IAAD,IAAsB,cAAC,IAAD,QAG3D,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAES,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAtC,SACGtC,EAAkB,cAACpB,EAAD,IAAoB,cAACb,EAAD,MAEzC,cAAC2D,EAAA,EAAD,CAAKC,GAAI,CAAES,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAtC,SACE,cAAChB,EAAA,EAAD,CACEC,KAAK,QACL,aAAW,YACX,gBAAed,EACf,gBAAc,OACdpC,QAlEkBmE,IAC5BnC,EAAsBmC,EAAMC,gBAkElBrE,MAAM,UANR,SAQE,cAAC,IAAD,aAKPsC,K,mFC7GP,MAAMvB,EAAYC,aAAYC,GAC5BC,YAAa,CACXC,KAAM,CACJmD,QAASrD,EAAMM,QAAQ,EAAG,GAC1BgD,OAAQ,IACRC,MAAO,YAKPC,EAAwB,CAC5B,CAAEC,MAAO,KAAMC,WAAY,KAAMH,MAAO,KACxC,CACEE,MAAO,OACPC,WAAY,OACZH,MAAO,KAET,CACEE,MAAO,cACPC,WAAY,cACZH,MAAO,KAET,CACEE,MAAO,WACPC,WAAY,OACZC,UAAU,EACVC,WAAaC,GAAkC,cAAChF,EAAA,EAAD,CAAQiF,UAAW,cAAC,IAAD,IAAgBC,KAAMF,EAAOG,MAAOlF,QAAQ,YAA/D,oBAiCpCmF,MA5BQ,KACrB,MAAOC,EAAUC,GAAelD,mBAAqB,IAC/CP,EAAUZ,IAYhB,OAXAsE,qBAAU,KACRC,IACGC,IAAI,iDACJC,MAAMC,IACLL,EAAYK,EAASC,SAEtBvF,OAAOwF,IACNtF,QAAQuF,IAAID,QAEf,IAGD,qBAAK/B,UAAWjC,EAAQR,KAAxB,SACE,cAAC,IAAD,CACE0E,KAAMV,EACNW,QAA6B,IAApBX,EAASY,OAClBtB,QAASA,EACTuB,SAAU,GACVC,mBAAoB,CAAC,IACrBC,yBAAuB,O,iEC9C/B,MAAMnF,GAAYC,aAAYC,GAC5BC,YAAa,CACXC,KAAM,CACJmD,QAASrD,EAAMM,QAAQ,EAAG,IAE5B4E,MAAO,CACL3B,MAAOvD,EAAMM,QAAQ,GACrBgD,OAAQtD,EAAMM,QAAQ,QAoCb6E,OAhCc,KAC3B,MAAMzE,EAAUZ,KAChB,OACE,qBAAK6C,UAAWjC,EAAQR,KAAxB,SACE,cAACkF,EAAA,EAAD,CAAMC,WAAS,EAAC/E,QAAS,EAAzB,SACE,cAAC8E,EAAA,EAAD,CAAME,MAAI,EAACtC,GAAI,GAAf,SACE,eAACuC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,OACE,cAACC,GAAA,EAAD,CAAQ/C,UAAWjC,EAAQwE,MAA3B,SACE,cAAC,IAAD,CACES,MAAM,0BACNhD,UAAWjC,EAAQwE,UAIzB3E,MAAM,wBACNqF,UAAU,4BAEZ,eAACC,GAAA,EAAD,WACE,cAAChD,EAAA,EAAD,CAAY/D,QAAQ,QAApB,0BACA,mBAAGiF,KAAK,kCAAR,SACE,cAAC,IAAD,mB,qBChChB,MAAMjE,GAAYC,aAAYC,GAC5BC,YAAa,CACXC,KAAM,CACJmD,QAASrD,EAAMM,QAAQ,EAAG,IAE5B4E,MAAO,CACL3B,MAAOvD,EAAMM,QAAQ,GACrBgD,OAAQtD,EAAMM,QAAQ,QAuCbwF,OAnCS,KACtB,MAAMpF,EAAUZ,KAChB,OACE,qBAAK6C,UAAWjC,EAAQR,KAAxB,SACE,cAACkF,EAAA,EAAD,CAAMC,WAAS,EAAC/E,QAAS,EAAzB,SACE,cAAC8E,EAAA,EAAD,CAAME,MAAI,EAACtC,GAAI,GAAf,SACE,eAACuC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,OACE,cAACC,GAAA,EAAD,CAAQ/C,UAAWjC,EAAQwE,MAA3B,SACE,cAAC,IAAD,CACES,MAAM,0BACNhD,UAAWjC,EAAQwE,UAIzB3E,MAAM,eACNqF,UAAU,4BAEZ,eAACC,GAAA,EAAD,WACE,cAAChD,EAAA,EAAD,CAAY/D,QAAQ,QAApB,0BACA,mBAAGiF,KAAK,oCAAR,SACE,cAAC,KAAD,MAEF,mBAAGA,KAAK,iCAAR,SACE,cAAC,IAAD,mBC/ChB,MAAMjE,GAAYC,aAAYC,GAC5BC,YAAa,CACXC,KAAM,CACJmD,QAASrD,EAAMM,QAAQ,EAAG,IAE5B4E,MAAO,CACL3B,MAAOvD,EAAMM,QAAQ,GACrBgD,OAAQtD,EAAMM,QAAQ,QA8JbyF,OAzJC,KACd,MAAMrF,EAAUZ,KAChB,OACE,sBAAK6C,UAAWjC,EAAQR,KAAxB,UACE,gEAEA,0HAKA,iOAMA,yYAMkB,IAChB,mBAAG6D,KAAK,wCAAR,+CAPF,OAaA,iOAMA,gEAEA,uTAOA,0CAEA,0ZASA,yCAEA,oPAMA,0UAQA,qFACuD,IACrD,mBAAGA,KAAK,wDAAR,gCAFF,OAQA,mDAEA,kHAKA,+BACE,4DACA,uEACA,yEACA,uFAGF,oSAOA,0CAEA,sVAQA,sDAEA,0aASA,mDAEA,oeAUA,gEAEA,yTAOA,4CAEA,sIC7HSiC,OA/BA,CACb,CACEC,KAAM,IACNC,IAAK,OACLC,KAAM,cAACvD,EAAA,EAAD,qBACNwD,YAAa,OACbC,UAAWpC,GAEb,CACEgC,KAAM,cACNC,IAAK,aACLC,KAAM,cAACvD,EAAA,EAAD,qBACNwD,YAAa,aACbC,UAAWlB,IAEb,CACEc,KAAM,SACNC,IAAK,QACLC,KAAM,cAACvD,EAAA,EAAD,mBACNwD,YAAa,WACbC,UAAWP,IAEb,CACEG,KAAM,WACNC,IAAK,UACLC,KAAM,cAACvD,EAAA,EAAD,mBACNwD,YAAa,iBACbC,UAAWN,KC3Bf,MAAMjG,GAAYC,YAAW,CAC3BG,KAAM,CACJqD,MAAO,UA0CI+C,oBAtCeC,IAC5B,MAAM7F,EAAUZ,MACTkE,EAAOwC,GAAY7G,IAAMsB,SAAS,QAczC,OACE,cAACwF,EAAA,EAAD,CACEzC,MAViB0C,KACnB,IAAIC,EAASX,GAAOY,QACjBC,GAAUA,EAAMZ,OAASM,EAAMO,SAASC,WACzCC,KAAKH,GAAUA,EAAMX,MAAK,GAE5B,OADAS,EAASA,GAAUD,EACZC,GAKEM,CAAYjD,GACnBkD,SAfJ,SAAsB/D,EAA8BgE,GAClDX,EAASW,IAePxE,UAAWjC,EAAQR,KAHrB,SAKG8F,GAAOgB,KAAI,CAACI,EAAMlB,IAEf,cAACmB,EAAA,EAAD,CACEC,MAAOF,EAAKhB,YAEZC,UAAWkB,IACXC,GAAIJ,EAAKnB,KACTjC,MAAOoD,EAAKlB,IACZC,KAAMiB,EAAKjB,MAJND,UCkBFuB,OA3CO,KACpB,MAAOrF,EAAMsF,GAAW/H,IAAMsB,SAA2B,QACnDJ,EAAYlB,IAAMgI,SACtB,MACE9H,gBAAiB,KACf6H,GAASE,GAA2B,UAAbA,EAAuB,OAAS,cAG3D,IAGI5H,EAAQL,IAAMgI,SAClB,IACEE,YAAY,CACV1F,QAAS,CACPC,WAGN,CAACA,IAEH,OACE,cAAC,IAAD,UACE,cAAC1C,EAAiBoI,SAAlB,CAA2B9D,MAAOnD,EAAlC,SACA,eAACkH,EAAA,EAAD,CAAe/H,MAAOA,EAAtB,UACE,cAACgI,EAAA,EAAD,IACA,gCACE,cAACxH,EAAD,IACA,eAAC,IAAD,WACGwF,GAAOgB,KAAKH,GACX,cAAC,IAAD,CAAOoB,OAAK,EAAChC,KAAMY,EAAMZ,KAAzB,SACE,cAACY,EAAMR,UAAP,KADkCQ,EAAMZ,QAI5C,cAAC,IAAD,CAAUiC,KAAK,IAAIV,GAAG,SAExB,cAAC,GAAD,eCrCUrG,QACW,cAA7BgH,OAAOrB,SAASsB,UAEe,UAA7BD,OAAOrB,SAASsB,UAEhBD,OAAOrB,SAASsB,SAASC,MACvB,2DCRN,MAAMC,GAAe,IAAIC,IbRiB,CACxCC,KAAM,CACJC,SAAU,uCACVC,UAAW,2CACXC,YAAuC,yBAEzCC,MAAO,CACLC,wBAAwB,KaG5BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAcrK,SAAU2J,GAAxB,SACE,cAAC,GAAD,QAGJW,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9E,MAAM+E,IAClCA,EAAaC,kB","file":"static/js/main.a6196408.chunk.js","sourcesContent":["import { Configuration } from \"@azure/msal-browser\";\n\nexport const msalConfig : Configuration = {\n  auth: {\n    clientId: \"a1b99b18-caf6-4e5d-ab28-4456f87a9ffc\",\n    authority: \"https://login.microsoftonline.com/common\",\n    redirectUri: process.env.PUBLIC_URL || \"http://localhost:3000\",\n  },\n  cache: {\n    storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n  }\n};\n\n// Add scopes here for ID token to be used at Microsoft identity platform endpoints.\nexport const loginRequest = {\n  scopes: [\"User.Read\"]\n};\n\n// Add the endpoints here for Microsoft Graph API services you'd like to use.\nexport const graphConfig = {\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};","import React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from \"../authConfig\";\nimport { Button } from \"@mui/material\";\nimport { IPublicClientApplication } from \"@azure/msal-browser\";\n\nfunction handleLogin(instance: IPublicClientApplication) {\n  instance.loginRedirect(loginRequest).catch(e => {\n    console.error(e);\n  });\n}\n\n/**\n * Renders a button which, when selected, will open a popup for login\n */\nexport const SignInButton = () => {\n  const { instance } = useMsal();\n\n  return (\n    <Button variant=\"contained\" color=\"secondary\" onClick={() => handleLogin(instance)}>Sign In</Button>\n  );\n}","import React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { Button } from \"@mui/material\";\nimport { IPublicClientApplication } from \"@azure/msal-browser\";\n\nfunction handleLogout(instance: IPublicClientApplication) {\n  instance.logoutRedirect().catch(e => {\n    console.error(e);\n  });\n}\n\n/**\n * Renders a button which, when selected, will redirect the page to the logout prompt\n */\nexport const SignOutButton = () => {\n  const { instance } = useMsal();\n\n  return (\n    <Button variant=\"contained\" color=\"secondary\" onClick={() => handleLogout(instance)}>Sign out</Button>\n  );\n}","import React from \"react\";\n\nexport const ColorModeContext = React.createContext({ toggleColorMode: () => { } });\n\n","import { useContext, useState } from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from '@mui/material/Box';\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Icon from \"@mui/material/Icon\";\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useTheme, Theme } from \"@mui/material/styles\";\nimport createStyles from '@mui/styles/createStyles';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport MoreIcon from '@mui/icons-material/MoreVert';\nimport { useIsAuthenticated } from \"@azure/msal-react\";\nimport { SignInButton } from \"./SingInButton\";\nimport { SignOutButton } from \"./SignOutButton\";\nimport { ColorModeContext } from \"../color-mode-context\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\nexport default function Header() {\n  const theme = useTheme();\n  const classes = useStyles();\n  const isAuthenticated = useIsAuthenticated();\n  const colorMode = useContext(ColorModeContext);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\n    useState<null | HTMLElement>(null);\n\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem onClick={colorMode.toggleColorMode}>\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\n          {theme.palette.mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n        </IconButton>\n        <p>Change Theme</p>\n      </MenuItem>\n      <MenuItem>\n        {isAuthenticated ? <SignOutButton /> : <SignInButton />}\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            size=\"large\">\n            <Icon>menu</Icon>\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Berv Project\n          </Typography>\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n            <IconButton sx={{ ml: 1 }} onClick={colorMode.toggleColorMode} color=\"inherit\">\n              {theme.palette.mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n            </IconButton>\n          </Box>\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n            {isAuthenticated ? <SignOutButton /> : <SignInButton />}\n          </Box>\n          <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from '@mui/styles/createStyles';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from '@mui/material/Button';\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport axios from \"axios\";\nimport { DataGrid, GridColDef, GridRenderCellParams } from '@mui/x-data-grid';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(3, 2),\n      height: 600,\n      width: '100%',\n    },\n  })\n);\n\nconst columns: GridColDef[] = [\n  { field: 'id', headerName: 'ID', width: 100 },\n  {\n    field: 'name',\n    headerName: 'Name',\n    width: 250,\n  },\n  {\n    field: 'description',\n    headerName: 'Description',\n    width: 500,\n  },\n  {\n    field: 'html_url',\n    headerName: 'Link',\n    sortable: false,\n    renderCell: (params: GridRenderCellParams) => (<Button startIcon={<GitHubIcon />} href={params.value} variant=\"contained\">Repo</Button>)\n  }\n];\n\n\nconst Home: React.FC = () => {\n  const [projects, setProjects] = useState<Array<any>>([]);\n  const classes = useStyles();\n  useEffect(() => {\n    axios\n      .get(\"https://api.github.com/orgs/bervProject/repos\")\n      .then((response) => {\n        setProjects(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <DataGrid\n        rows={projects}\n        loading={projects.length === 0}\n        columns={columns}\n        pageSize={10}\n        rowsPerPageOptions={[10]}\n        disableSelectionOnClick\n      />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport Gravatar from \"react-gravatar\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport {\n  Avatar,\n  CardHeader,\n  CardContent,\n  Typography,\n  Grid,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from '@mui/styles/createStyles';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(3, 2),\n    },\n    large: {\n      width: theme.spacing(7),\n      height: theme.spacing(7),\n    },\n  })\n);\nconst Maintainer: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Card>\n            <CardHeader\n              avatar={\n                <Avatar className={classes.large}>\n                  <Gravatar\n                    email=\"bervianto.leo@gmail.com\"\n                    className={classes.large}\n                  />\n                </Avatar>\n              }\n              title=\"Bervianto Leo Pratama\"\n              subheader=\"bervianto.leo@gmail.com\"\n            ></CardHeader>\n            <CardContent>\n              <Typography variant=\"body1\">Social Media</Typography>\n              <a href=\"https://github.com/berviantoleo\">\n                <GitHubIcon />\n              </a>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Maintainer;\n","import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport Gravatar from \"react-gravatar\";\nimport InstagramIcon from \"@mui/icons-material/Instagram\";\nimport GithubIcon from \"@mui/icons-material/GitHub\";\nimport {\n  Avatar,\n  CardHeader,\n  CardContent,\n  Typography,\n  Grid,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from '@mui/styles/createStyles';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(3, 2),\n    },\n    large: {\n      width: theme.spacing(7),\n      height: theme.spacing(7),\n    },\n  })\n);\nconst About: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Card>\n            <CardHeader\n              avatar={\n                <Avatar className={classes.large}>\n                  <Gravatar\n                    email=\"bervianto.leo@gmail.com\"\n                    className={classes.large}\n                  />\n                </Avatar>\n              }\n              title=\"Berv Project\"\n              subheader=\"bervianto.leo@gmail.com\"\n            ></CardHeader>\n            <CardContent>\n              <Typography variant=\"body1\">Social Media</Typography>\n              <a href=\"https://instagram.com/bervproject\">\n                <InstagramIcon />\n              </a>\n              <a href=\"https://github.com/bervProject\">\n                <GithubIcon />\n              </a>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from '@mui/styles/createStyles';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(3, 2),\n    },\n    large: {\n      width: theme.spacing(7),\n      height: theme.spacing(7),\n    },\n  })\n);\n\nconst Privacy = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <h1>Privacy Policy of Berv Project</h1>\n\n      <p>\n        Berv Project operates the https://berviantoleo.my.id website, which\n        provides the SERVICE.\n      </p>\n\n      <p>\n        This page is used to inform website visitors regarding our policies with\n        the collection, use, and disclosure of Personal Information if anyone\n        decided to use our Service, the Berv App website.\n      </p>\n\n      <p>\n        If you choose to use our Service, then you agree to the collection and\n        use of information in relation with this policy. The Personal\n        Information that we collect are used for providing and improving the\n        Service. We will not use or share your information with anyone except as\n        described in this Privacy Policy. Our Privacy Policy was created with\n        the help of the{\" \"}\n        <a href=\"https://www.privacypolicytemplate.net\">\n          Privacy Policy Template Generator\n        </a>\n        .\n      </p>\n\n      <p>\n        The terms used in this Privacy Policy have the same meanings as in our\n        Terms and Conditions, which is accessible at https://berviantoleo.my.id,\n        unless otherwise defined in this Privacy Policy.\n      </p>\n\n      <h2>Information Collection and Use</h2>\n\n      <p>\n        For a better experience while using our Service, we may require you to\n        provide us with certain personally identifiable information, including\n        but not limited to your name, phone number, and postal address. The\n        information that we collect will be used to contact or identify you.\n      </p>\n\n      <h2>Log Data</h2>\n\n      <p>\n        We want to inform you that whenever you visit our Service, we collect\n        information that your browser sends to us that is called Log Data. This\n        Log Data may include information such as your computer’s Internet\n        Protocol (\"IP\") address, browser version, pages of our Service that you\n        visit, the time and date of your visit, the time spent on those pages,\n        and other statistics.\n      </p>\n\n      <h2>Cookies</h2>\n\n      <p>\n        Cookies are files with small amount of data that is commonly used an\n        anonymous unique identifier. These are sent to your browser from the\n        website that you visit and are stored on your computer’s hard drive.\n      </p>\n\n      <p>\n        Our website uses these \"cookies\" to collection information and to\n        improve our Service. You have the option to either accept or refuse\n        these cookies, and know when a cookie is being sent to your computer. If\n        you choose to refuse our cookies, you may not be able to use some\n        portions of our Service.\n      </p>\n\n      <p>\n        For more general information on cookies, please read{\" \"}\n        <a href=\"https://www.privacypolicyonline.com/what-are-cookies/\">\n          \"What Are Cookies\"\n        </a>\n        .\n      </p>\n\n      <h2>Service Providers</h2>\n\n      <p>\n        We may employ third-party companies and individuals due to the following\n        reasons:\n      </p>\n\n      <ul>\n        <li>To facilitate our Service;</li>\n        <li>To provide the Service on our behalf;</li>\n        <li>To perform Service-related services; or</li>\n        <li>To assist us in analyzing how our Service is used.</li>\n      </ul>\n\n      <p>\n        We want to inform our Service users that these third parties have access\n        to your Personal Information. The reason is to perform the tasks\n        assigned to them on our behalf. However, they are obligated not to\n        disclose or use the information for any other purpose.\n      </p>\n\n      <h2>Security</h2>\n\n      <p>\n        We value your trust in providing us your Personal Information, thus we\n        are striving to use commercially acceptable means of protecting it. But\n        remember that no method of transmission over the internet, or method of\n        electronic storage is 100% secure and reliable, and we cannot guarantee\n        its absolute security.\n      </p>\n\n      <h2>Links to Other Sites</h2>\n\n      <p>\n        Our Service may contain links to other sites. If you click on a\n        third-party link, you will be directed to that site. Note that these\n        external sites are not operated by us. Therefore, we strongly advise you\n        to review the Privacy Policy of these websites. We have no control over,\n        and assume no responsibility for the content, privacy policies, or\n        practices of any third-party sites or services.\n      </p>\n\n      <p>Children's Privacy</p>\n\n      <p>\n        Our Services do not address anyone under the age of 13. We do not\n        knowingly collect personal identifiable information from children under\n        13. In the case we discover that a child under 13 has provided us with\n        personal information, we immediately delete this from our servers. If\n        you are a parent or guardian and you are aware that your child has\n        provided us with personal information, please contact us so that we will\n        be able to do necessary actions.\n      </p>\n\n      <h2>Changes to This Privacy Policy</h2>\n\n      <p>\n        We may update our Privacy Policy from time to time. Thus, we advise you\n        to review this page periodically for any changes. We will notify you of\n        any changes by posting the new Privacy Policy on this page. These\n        changes are effective immediately, after they are posted on this page.\n      </p>\n\n      <h2>Contact Us</h2>\n\n      <p>\n        If you have any questions or suggestions about our Privacy Policy, do\n        not hesitate to contact us.\n      </p>\n    </div>\n  );\n};\n\nexport default Privacy;\n","import React from \"react\";\nimport Icon from \"@mui/material/Icon\";\nimport Home from \"./Home\";\nimport Maintainer from \"./Maintainer\";\nimport About from \"./About\";\nimport Privacy from \"./Privacy\";\n\nconst Routes = [\n  {\n    path: \"/\",\n    key: \"home\",\n    icon: <Icon>folder</Icon>,\n    sidebarName: \"Home\",\n    component: Home,\n  },\n  {\n    path: \"/maintainer\",\n    key: \"maintainer\",\n    icon: <Icon>people</Icon>,\n    sidebarName: \"Maintainer\",\n    component: Maintainer,\n  },\n  {\n    path: \"/about\",\n    key: \"about\",\n    icon: <Icon>help</Icon>,\n    sidebarName: \"About Us\",\n    component: About,\n  },\n  {\n    path: \"/privacy\",\n    key: \"privacy\",\n    icon: <Icon>help</Icon>,\n    sidebarName: \"Privacy Policy\",\n    component: Privacy,\n  },\n];\n\nexport default Routes;\n","import React from \"react\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Routes from \"./Routes\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n});\n\nconst Navigation: React.FC = (props: any) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\"home\");\n\n  function handleChange(event: React.ChangeEvent<{}>, newValue: string) {\n    setValue(newValue);\n  }\n\n  const activeRoute = (defaultValue: string) => {\n    let result = Routes.filter(\n      (route) => route.path === props.location.pathname\n    ).map((route) => route.key)[0];\n    result = result || defaultValue;\n    return result;\n  };\n\n  return (\n    <BottomNavigation\n      value={activeRoute(value)}\n      onChange={handleChange}\n      className={classes.root}\n    >\n      {Routes.map((prop, key) => {\n        return (\n          <BottomNavigationAction\n            label={prop.sidebarName}\n            key={key}\n            component={Link}\n            to={prop.path}\n            value={prop.key}\n            icon={prop.icon}\n          />\n        );\n      })}\n    </BottomNavigation>\n  );\n};\n\nexport default withRouter(Navigation);\n","import React from \"react\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Header from \"./components/Header\";\nimport Navigation from \"./Navigation\";\nimport Routes from \"./Routes\";\nimport { ColorModeContext } from \"./color-mode-context\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nconst App: React.FC = () => {\n  const [mode, setMode] = React.useState<'light' | 'dark'>('dark');\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n      },\n    }),\n    [],\n  );\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n        },\n      }),\n    [mode],\n  );\n  return (\n    <Router>\n      <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <div>\n          <Header></Header>\n          <Switch>\n            {Routes.map((route: any) => (\n              <Route exact path={route.path} key={route.path}>\n                <route.component />\n              </Route>\n            ))}\n            <Redirect from=\"*\" to=\"/\" />\n          </Switch>\n          <Navigation></Navigation>\n        </div>\n      </ThemeProvider>\n      </ColorModeContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"typeface-roboto\";\nimport \"./index.css\";\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { msalConfig } from \"./authConfig\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst msalInstance = new PublicClientApplication(msalConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <MsalProvider instance={msalInstance}>\n      <App />\n    </MsalProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}